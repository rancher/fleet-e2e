#!/bin/bash

set -evx

# Needed to install Cypress plugins
npm install

# Start Cypress tests with docker
docker run --init -v $PWD:/workdir -w /workdir              \
    -e CYPRESS_TAGS=$CYPRESS_TAGS                           \
    -e QASE_API_TOKEN=$QASE_API_TOKEN                       \
    -e QASE_REPORT=$QASE_REPORT                             \
    -e QASE_RUN_ID=$QASE_RUN_ID                             \
    -e RANCHER_VERSION=$RANCHER_VERSION                     \
    -e RANCHER_PASSWORD=$RANCHER_PASSWORD                   \
    -e RANCHER_URL=$RANCHER_URL                             \
    -e RANCHER_USER=$RANCHER_USER                           \
    -e GITLAB_PRIVATE_USER=$GITLAB_PRIVATE_USER             \
    -e GITLAB_PRIVATE_PWD=$GITLAB_PRIVATE_PWD               \
    -e BITBUCKET_PRIVATE_USER=$BITBUCKET_PRIVATE_USER       \
    -e BITBUCKET_PRIVATE_PWD=$BITBUCKET_PRIVATE_PWD         \
    -e GH_PRIVATE_USER=$GH_PRIVATE_USER                     \
    -e GH_PRIVATE_PWD=$GH_PRIVATE_PWD                       \
    -e AZURE_PRIVATE_USER=$AZURE_PRIVATE_USER               \
    -e AZURE_PRIVATE_PWD=$AZURE_PRIVATE_PWD                 \
    -e "RSA_PRIVATE_KEY_QA=$RSA_PRIVATE_KEY_QA"             \
    -e "RSA_PUBLIC_KEY_QA=$RSA_PUBLIC_KEY_QA"               \
    -e "GREP=$GREP"                                         \
    -e "GREPTAGS=$GREPTAGS"                                 \
    -e "UPGRADE=$UPGRADE"                                   \
    -e "FLEET_APP_VERSION=$FLEET_APP_VERSION"               \
    -e "K8S_VERSION_UPGRADE_DS_CLUSTER_TO=$K8S_VERSION_UPGRADE_DS_CLUSTER_TO"               \
    -e "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID"               \
    -e "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY"       \
    --add-host host.docker.internal:host-gateway            \
    --ipc=host                                              \
    $CYPRESS_DOCKER                                         \
    -s $SPEC
